Testes Web
- Teste de Regressão = tudo de novo a cada mudança
--> Ferramenta Paga: Mercury
--> Ferramenta Open Source / Gratuito: Selenium (Se)
                             - usos: Shampoo Anti-caspa, Alto falantes e pesticida
    EUA
    ThoughtWorks (TW)
    2004 - Funcionarios

Diferenciais:
- Multi Sistema Operacional: Windows, Linux, Mac, etc
- Multi Browsers: Chrome, Firefox, Opera, Safari, Edge, etc
- Multi Linguagem: Java, Python, C#, JavaScript, Ruby, etc

Tudo isso é o que chamamos de Selenium WebDriver (anteriormente, Remote Control/RC)

PoC = Proof of Concept = Prova de Conceito

2007 - Japão - TW - funcionária --> Selenium IDE
    Ferramenta do tipo: Capture & Playback / Record and Play / Gravador
    - gravar eu fazendo um teste manual, salvar e executar novamente
    - entender / aprender / tirar dúvidas sobre como automatizar os testes do site
    - exportar o código fonte para servir de base para o começo de um projeto
    Acusações / Pre-conceitos:
    - verborragica: escreve código demais
    - estilo muito simples de código: não gera em Gherkin/BDD, em Page Objects (! voltou a moda)
    - dificil de manter / modifica o código --> basicamente, fazer tudo de novo
    - emburrece - você não aprender a automatizar se não for logo programando
    ----> Bicicleta de rodinhas

É uma extensão para navegadores como Firefox, Chrome e Edge

Como funciona o controle do Selenium sobre o navegador/browser?

Código-fonte
    |
Selenium---------> Driver ---------> Browser
                  1 para cada
               versão de browser

Gerenciamento dos Drivers
- Pode ser feito de 3 formas:
1 - Download do driver desejado a partir do site do fornecedor
    e coloca em cada projeto
2 - Download do driver desejado a partir do site do fornecedor
    e coloca em uma pasta única compartilhada com todos os projetos
    Normalmente, envolve adicionar o apontamento nas variaveis de ambiente
3 - Pode adicionar o pacote WebDriverManager ao seu projeto
    Não recomendavel no momento para JavaScript







